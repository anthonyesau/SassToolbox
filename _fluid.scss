$fluid-values: (
  vw: (400px 1920px),
  baserem: (16px 24px)
) !default;

$min_vw: nth(map-get($fluid-values, "vw"), 1) !default;
$max_vw: nth(map-get($fluid-values, "vw"), 2) !default;

/// Remove the unit of a length
/// @param {Number} $number - Number to remove unit from
/// @return {Number} - Unitless number
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@function fluid-value($key, $values: $fluid-values) {
  $list: map-get($values, $key);
  $min_val: nth($list, 1);
  $max_val: nth($list, 2);
  $vws: map-get($values, "vw");
  $min_vw: nth($vws, 1);
  $max_vw: nth($vws, 2);
  $fluid_calc: calc( #{$min_val} + (#{strip-unit($max_val)} - #{strip-unit($min_val)}) * ( (100vw - #{$min_vw}) / ( #{strip-unit($max_vw)} - #{strip-unit($min_vw)}) ));
  $fluid: ($min_val $fluid_calc $max_val);
  $value: nth($fluid, $fluid-index);
  @return $value;
}

// Shorthand for fluid-value
@function fv($key, $values: $fluid-values) {
  @return fluid-value($key, $values);
}

@function manual-fluid-value($min_val, $max_val, $min_vw: $min_vw, $max_vw: $max_vw) {
  $fluid_calc: calc( #{$min_val} + (#{strip-unit($max_val)} - #{strip-unit($min_val)}) * ( (100vw - #{$min_vw}) / ( #{strip-unit($max_vw)} - #{strip-unit($min_vw)}) ));
  $fluid: ($min_val $fluid_calc $max_val);
  $value: nth($fluid, $fluid-index);
  @return $value;
}

// Shorthand for manual-fluid-value
@function mfv($min_val, $max_val, $min_vw: $min_vw, $max_vw: $max_vw) {
  @return manual-fluid-value($min_val, $max_val, $min_vw: $min_vw, $max_vw: $max_vw);
}

@mixin fluid($values: $fluid-values) {
  $vws: map-get($values, "vw");
  $min_vw: nth($vws, 1);
  $max_vw: nth($vws, 2);

  $fluid-index: 1 !global;
  @content;

  @media (min-width: #{$min_vw}) and (max-width: #{$max_vw}){
    $fluid-index: 2 !global;
    @content;
  }

  @media (min-width: #{$max_vw}){
    $fluid-index: 3 !global;
    @content;
  }
}
